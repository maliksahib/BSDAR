/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package GraphicalUserInterface;

import AnalyzedProject.DetectionFlag;
import AnalyzedProject.Metrics;

/**
 *
 * @author MHAWAN
 */
public class MetricsResultPanel extends javax.swing.JPanel {

    /**
     * Creates new form MetricsResultPanel
     */
    public MetricsResultPanel() {
        initComponents();
    }

    public void setMetricsResultPanel() {
        String[][] mresult = new String[12][2];
        int counter = 0;
        if (DetectionFlag.isNumberOfPackagesflag()) {
            mresult[counter][0] = "Number Of Packages";
            mresult[counter][1] = "" + Metrics.getNumberOfPackages();
            counter++;
        }
        if (DetectionFlag.isNumberOfClassesflag()) {
            mresult[counter][0] = "Number Of Classes";
            mresult[counter][1] = "" + Metrics.getNumberOfClasses();
            counter++;
        }
        if (DetectionFlag.isNumberOfLocalClassesFlag()) {
            mresult[counter][0] = "Number Of Local Classes";
            mresult[counter][1] = "" + Metrics.getNumberOfLocalClasses();
            counter++;
        }
        if (DetectionFlag.isNumberOfMemberClassesFlag()) {
            mresult[counter][0] = "Number Of Member Classes";
            mresult[counter][1] = "" + Metrics.getNumberOfMemberClasses();
            counter++;
        }
        if (DetectionFlag.isNumberOfTopLevelClassesFlag()) {
            mresult[counter][0] = "Number Of Top Level Classes";
            mresult[counter][1] = "" + Metrics.getNumberOfTopLevelClasses();
            counter++;
        }
        if (DetectionFlag.isNumberOfInterfacesflag()) {
            mresult[counter][0] = "Number Of Interfaces";
            mresult[counter][1] = "" + Metrics.getNumberOfInterfaces();
            counter++;
        }
        if (DetectionFlag.isNumberOfFieldsflag()) {
            mresult[counter][0] = "Number Of Fields";
            mresult[counter][1] = "" + Metrics.getNumberOfFields();
            counter++;
        }
        if (DetectionFlag.isNumberOfStaticFieldsFlag()) {
            mresult[counter][0] = "Number Of Static Fields";
            mresult[counter][1] = "" + Metrics.getNumberOfstaticFields();
            counter++;
        }
        if (DetectionFlag.isNumberOfMethodFlag()) {
            mresult[counter][0] = "Number Of Methods";
            mresult[counter][1] = "" + Metrics.getNumberOfMethods();
            counter++;
        }
        if (DetectionFlag.isNumberOfStaticMethodsFlag()) {
            mresult[counter][0] = "Number Of Static Methods";
            mresult[counter][1] = "" + Metrics.getNumberOfstaticMethods();
            counter++;
        }
        String[] header = {"Metrics Name", "Value"};
        TableModel model = new TableModel(mresult, header);
        jTable1.setModel(model);
        model.fireTableDataChanged();
       // model.fireTableStructureChanged();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 656, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
